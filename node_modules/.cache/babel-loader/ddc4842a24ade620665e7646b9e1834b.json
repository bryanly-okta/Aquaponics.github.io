{"ast":null,"code":"var _jsxFileName = \"/Users/bryanly/Documents/Javascript/React/my-app/src/components/pages/Live.js\";\nimport React, { Component } from 'react';\n\nclass Live extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  // Life Cycle Method\n  componentDidMount() {\n    // About the Genius API https://docs.genius.com/#/getting-started-h1\n    // Work through the steps inside of the render function\n    // If you get finished, try picking another API (maybe your final project choice)\n    // And use FETCH to pull data from it.\n    fetch('https://api.kijanigrows.com/v2/device/get/RedVic' //'https://hn.algolia.com/api/v1/search?query=sony'\n    ).then(response => {\n      //console.log(response); //this won't give us the data we need since it's only a promise\n      return response.json();\n    }).then(data => {\n      data = data;\n      this.setState({\n        data // this will set the key to the same value as the variable - data array\n\n      });\n      console.log(data);\n    });\n  } // Life Cycle Method\n\n\n  render() {\n    let newData = []; //\tconsole.log(\"this.state.data\" + this.state.data);\n\n    for (let item in this.state.data) {\n      // 1. Can you get the list of songs associated with this artist to show up?\n      // 2. Can you get an image to appear?\n      // 3. Can you link out the to the original webpage for each song?\n      let _this$state$data$item = this.state.data[item].pins,\n          flow_rate_sensor = _this$state$data$item.flow_rate_sensor,\n          humidity = _this$state$data$item.humidity,\n          humidity_dew_point = _this$state$data$item.humidity_dew_point,\n          nutrientTemp = _this$state$data$item.nutrientTemp,\n          ph = _this$state$data$item.ph,\n          temperature_0 = _this$state$data$item.temperature_0; // let fullTitle = this.state.data[item].result.title;\n      // let song_art_image_url = this.state.data[item].result.song_art_image_url;\n      // let url = this.state.data[item].result.url;\n      //console.log(fullTitle);\n\n      newData.push(React.createElement(\"li\", {\n        className: \"list-group-item text-dark text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, flow_rate_sensor, humidity, humidity_dew_point, nutrientTemp, ph, temperature_0, \"// \", React.createElement(\"a\", {\n        href: url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"// \", url, \"// \")));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group m-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, newData)));\n  }\n\n}\n\nexport default Live;","map":{"version":3,"sources":["/Users/bryanly/Documents/Javascript/React/my-app/src/components/pages/Live.js"],"names":["React","Component","Live","state","componentDidMount","fetch","then","response","json","data","setState","console","log","render","newData","item","pins","flow_rate_sensor","humidity","humidity_dew_point","nutrientTemp","ph","temperature_0","push","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB,EADoB;AAAA;;AAG5B;AACAC,EAAAA,iBAAiB,GAAG;AACnB;AACA;AACA;AACA;AACAC,IAAAA,KAAK,CACJ,kDADI,CAEJ;AAFI,KAAL,CAIEC,IAJF,CAIQC,QAAD,IAAc;AACnB;AACA,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAPF,EAQEF,IARF,CAQQG,IAAD,IAAU;AACfA,MAAAA,IAAI,GAAGA,IAAP;AACA,WAAKC,QAAL,CAAc;AACbD,QAAAA,IADa,CACR;;AADQ,OAAd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,KAdF;AAeA,GAxB2B,CA0B5B;;;AACAI,EAAAA,MAAM,GAAG;AACR,QAAIC,OAAO,GAAG,EAAd,CADQ,CAET;;AAEC,SAAK,IAAIC,IAAT,IAAiB,KAAKZ,KAAL,CAAWM,IAA5B,EAAkC;AAEjC;AACA;AACA;AAJiC,kCAKuD,KAAKN,KAAL,CAAWM,IAAX,CAAgBM,IAAhB,EAAsBC,IAL7E;AAAA,UAK3BC,gBAL2B,yBAK3BA,gBAL2B;AAAA,UAKTC,QALS,yBAKTA,QALS;AAAA,UAKCC,kBALD,yBAKCA,kBALD;AAAA,UAKqBC,YALrB,yBAKqBA,YALrB;AAAA,UAKkCC,EALlC,yBAKkCA,EALlC;AAAA,UAKqCC,aALrC,yBAKqCA,aALrC,EAQjC;AACA;AACA;AACA;;AACAR,MAAAA,OAAO,CAACS,IAAR,CACC;AAAI,QAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCN,gBADD,EAECC,QAFD,EAGCC,kBAHD,EAICC,YAJD,EAKCC,EALD,EAMCC,aAND,SAOG;AAAG,QAAA,IAAI,EAAEE,GAAT;AAAc,QAAA,MAAM,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACCA,GADD,QAPH,CADD;AAYA;;AAED,WACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCV,OAAhC,CADD,CADD,CADD;AASA;;AAlE2B;;AAqE7B,eAAeZ,IAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass Live extends Component {\n\tstate = {};\n\n\t// Life Cycle Method\n\tcomponentDidMount() {\n\t\t// About the Genius API https://docs.genius.com/#/getting-started-h1\n\t\t// Work through the steps inside of the render function\n\t\t// If you get finished, try picking another API (maybe your final project choice)\n\t\t// And use FETCH to pull data from it.\n\t\tfetch(\n\t\t\t'https://api.kijanigrows.com/v2/device/get/RedVic'\n\t\t\t//'https://hn.algolia.com/api/v1/search?query=sony'\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\t//console.log(response); //this won't give us the data we need since it's only a promise\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tdata = data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata // this will set the key to the same value as the variable - data array\n\t\t\t\t});\n\t\t\t\tconsole.log(data);\n\t\t\t});\n\t}\n\n\t// Life Cycle Method\n\trender() {\n\t\tlet newData = [];\n\t//\tconsole.log(\"this.state.data\" + this.state.data);\n\n\t\tfor (let item in this.state.data) {\n\n\t\t\t// 1. Can you get the list of songs associated with this artist to show up?\n\t\t\t// 2. Can you get an image to appear?\n\t\t\t// 3. Can you link out the to the original webpage for each song?\n\t\t\tlet { flow_rate_sensor, humidity, humidity_dew_point, nutrientTemp,ph,temperature_0 } = this.state.data[item].pins;\n\n\n\t\t\t// let fullTitle = this.state.data[item].result.title;\n\t\t\t// let song_art_image_url = this.state.data[item].result.song_art_image_url;\n\t\t\t// let url = this.state.data[item].result.url;\n\t\t\t//console.log(fullTitle);\n\t\t\tnewData.push(\n\t\t\t\t<li className=\"list-group-item text-dark text-left\">\n\t\t\t\t{flow_rate_sensor}\n\t\t\t\t{humidity}\n\t\t\t\t{humidity_dew_point}\n\t\t\t\t{nutrientTemp}\n\t\t\t\t{ph}\n\t\t\t\t{temperature_0}\n\t\t\t\t// <a href={url} target='_blank'>\n\t\t\t\t// {url}\n\t\t\t\t// </a>\n\t\t\t</li>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<ul className=\"list-group m-4\">{newData}</ul>\n\n\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Live;\n"]},"metadata":{},"sourceType":"module"}