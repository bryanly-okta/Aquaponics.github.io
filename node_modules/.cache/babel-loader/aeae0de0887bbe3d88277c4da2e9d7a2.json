{"ast":null,"code":"var _jsxFileName = \"/Users/bryanly/Documents/Javascript/React/my-app/src/components/pages/Live.js\";\nimport React, { Component } from 'react';\n\nclass Live extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  // Life Cycle Method\n  componentDidMount() {\n    // About the Genius API https://docs.genius.com/#/getting-started-h1\n    // Work through the steps inside of the render function\n    // If you get finished, try picking another API (maybe your final project choice)\n    // And use FETCH to pull data from it.\n    fetch('https://api.kijanigrows.com/v2/device/get/RedVic').then(response => {\n      //\tconsole.log(response); this won't give us the data we need since it's only a promise\n      return response.json();\n    }).then(data => {\n      data = data.response._id;\n      this.setState({\n        data // this will set the key to the same value as the variable - data array\n\n      });\n      console.log(data);\n    });\n  } // Life Cycle Method\n\n\n  render() {\n    let newData = []; //console.log(\"this.state.data\" + this.state.data);\n\n    for (let item in this.state.data) {\n      // 1. Can you get the list of songs associated with this artist to show up?\n      // 2. Can you get an image to appear?\n      // 3. Can you link out the to the original webpage for each song?\n      let _this$state$data$item = this.state.data[item].result,\n          title = _this$state$data$item.title,\n          song_art_image_url = _this$state$data$item.song_art_image_url,\n          url = _this$state$data$item.url,\n          api_path = _this$state$data$item.api_path; // let fullTitle = this.state.data[item].result.title;\n      // let song_art_image_url = this.state.data[item].result.song_art_image_url;\n      // let url = this.state.data[item].result.url;\n      //console.log(fullTitle);\n\n      newData.push(React.createElement(\"li\", {\n        className: \"list-group-item text-dark text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, api_path, React.createElement(\"img\", {\n        src: song_art_image_url,\n        className: \"img-thumbnail\",\n        style: {\n          width: '200px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), title)));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group m-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, newData)));\n  }\n\n}\n\nexport default Live;","map":{"version":3,"sources":["/Users/bryanly/Documents/Javascript/React/my-app/src/components/pages/Live.js"],"names":["React","Component","Live","state","componentDidMount","fetch","then","response","json","data","_id","setState","console","log","render","newData","item","result","title","song_art_image_url","url","api_path","push","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB,EADoB;AAAA;;AAG5B;AACAC,EAAAA,iBAAiB,GAAG;AACnB;AACA;AACA;AACA;AACAC,IAAAA,KAAK,CACJ,kDADI,CAAL,CAGEC,IAHF,CAGQC,QAAD,IAAc;AACpB;AACC,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KANF,EAOEF,IAPF,CAOQG,IAAD,IAAU;AACfA,MAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,CAAcG,GAArB;AACA,WAAKC,QAAL,CAAc;AACbF,QAAAA,IADa,CACR;;AADQ,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,KAbF;AAcA,GAvB2B,CAyB5B;;;AACAK,EAAAA,MAAM,GAAG;AACR,QAAIC,OAAO,GAAG,EAAd,CADQ,CAER;;AAEA,SAAK,IAAIC,IAAT,IAAiB,KAAKb,KAAL,CAAWM,IAA5B,EAAkC;AAEjC;AACA;AACA;AAJiC,kCAKiB,KAAKN,KAAL,CAAWM,IAAX,CAAgBO,IAAhB,EAAsBC,MALvC;AAAA,UAK3BC,KAL2B,yBAK3BA,KAL2B;AAAA,UAKrBC,kBALqB,yBAKrBA,kBALqB;AAAA,UAKDC,GALC,yBAKDA,GALC;AAAA,UAKIC,QALJ,yBAKIA,QALJ,EAQjC;AACA;AACA;AACA;;AACAN,MAAAA,OAAO,CAACO,IAAR,CACC;AAAI,QAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,IAAI,EAAEF,GAAT;AAAc,QAAA,MAAM,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEC,QADF,EAEC;AAAK,QAAA,GAAG,EAAEF,kBAAV;AAA8B,QAAA,SAAS,EAAC,eAAxC;AAAwD,QAAA,KAAK,EAAE;AAACI,UAAAA,KAAK,EAAE;AAAR,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGEL,KAHF,CADA,CADD;AAQA;;AAED,WACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,OAAhC,CADD,CADD,CADD;AASA;;AA7D2B;;AAgE7B,eAAeb,IAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass Live extends Component {\n\tstate = {};\n\n\t// Life Cycle Method\n\tcomponentDidMount() {\n\t\t// About the Genius API https://docs.genius.com/#/getting-started-h1\n\t\t// Work through the steps inside of the render function\n\t\t// If you get finished, try picking another API (maybe your final project choice)\n\t\t// And use FETCH to pull data from it.\n\t\tfetch(\n\t\t\t'https://api.kijanigrows.com/v2/device/get/RedVic'\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t//\tconsole.log(response); this won't give us the data we need since it's only a promise\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tdata = data.response._id;\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata // this will set the key to the same value as the variable - data array\n\t\t\t\t});\n\t\t\t\tconsole.log(data);\n\t\t\t});\n\t}\n\n\t// Life Cycle Method\n\trender() {\n\t\tlet newData = [];\n\t\t//console.log(\"this.state.data\" + this.state.data);\n\n\t\tfor (let item in this.state.data) {\n\n\t\t\t// 1. Can you get the list of songs associated with this artist to show up?\n\t\t\t// 2. Can you get an image to appear?\n\t\t\t// 3. Can you link out the to the original webpage for each song?\n\t\t\tlet { title,song_art_image_url, url, api_path } = this.state.data[item].result;\n\n\n\t\t\t// let fullTitle = this.state.data[item].result.title;\n\t\t\t// let song_art_image_url = this.state.data[item].result.song_art_image_url;\n\t\t\t// let url = this.state.data[item].result.url;\n\t\t\t//console.log(fullTitle);\n\t\t\tnewData.push(\n\t\t\t\t<li className=\"list-group-item text-dark text-left\">\n\t\t\t\t<a href={url} target='_blank'>\n\t\t\t\t\t{api_path}\n\t\t\t\t\t<img src={song_art_image_url} className=\"img-thumbnail\" style={{width: '200px'}}  />\n\t\t\t\t\t{title}\n\t\t\t\t\t</a>\n\t\t\t</li>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<ul className=\"list-group m-4\">{newData}</ul>\n\n\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Live;\n"]},"metadata":{},"sourceType":"module"}